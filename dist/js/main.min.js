var bounds = [[-83.3437, 42.2102], [-82.8754, 42.5197]],
    baseMapStyles = ["cj2m68vfx001s2rs0nyherr29", "cj2m1f9k400132rmr1jhjq2gn"],
    parcelData = { "rental-status": null, "parcel-data": null },
    currentURLParams = { zoom: 0, lat: 0, lng: 0 };mapboxgl.accessToken = "pk.eyJ1Ijoic2x1c2Fyc2tpZGRldHJvaXRtaSIsImEiOiJjaXZsNXlwcXQwYnY5MnlsYml4NTJ2Mno4In0.8wKUnlMPIlxq-eWH0d10-Q";var map = new mapboxgl.Map({ container: "map", style: "mapbox://styles/slusarskiddetroitmi/" + baseMapStyles[0], center: [-83.15, 42.36], zoom: 11.5, keyboard: !0 });map.addControl(new mapboxgl.NavigationControl()), moment.tz.add("America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|01234252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 Jy10 SL0 dnB0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5");var loadCityNumbers = function () {
  document.querySelector(".overall-number").innerHTML = "", document.querySelector(".parcel-info").innerHTML = "", document.querySelector(".info-container > .not-rental").innerHTML = "", document.querySelector(".info-container > .rental").innerHTML = "", document.querySelector(".info-container > .total-rentals").innerHTML = "", document.querySelector(".parcel-data.owner").innerHTML = "", document.querySelector(".parcel-data.building").innerHTML = "", document.querySelector(".parcel-info.display-section").innerHTML = "", document.querySelector(".info-container > .street-name").innerHTML = "CITY OF DETROIT", document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT RENTAL COMPLAINT</article></a>', "active" === document.querySelector("#info").className || (document.querySelector("#info").className = "active");
},
    switchParcelDataViews = function (b) {
  switch (b.getAttribute("data-view")) {case "owner":
      var c = "";c += '<article class="info-items"><span>OWNER CITY</span> ' + parcelData["parcel-data"].ownercity + "</article>", c += '<article class="info-items"><span>OWNER NAME</span> ' + parcelData["parcel-data"].ownername1 + "</article>", c += '<article class="info-items"><span>OWNER STATE</span> ' + parcelData["parcel-data"].ownerstate + "</article>", c += '<article class="info-items"><span>OWNER ADDRESS</span> ' + parcelData["parcel-data"].ownerstreetaddr + "</article>", c += '<article class="info-items"><span>OWNER ZIP</span> ' + parcelData["parcel-data"].ownerzip + "</article>", document.querySelector(".parcel-info.display-section").innerHTML = c;break;case "building":
      var d = "";d += '<article class="info-items"><span>PARCEL NUMBER</span> ' + parcelData["parcel-data"].pnum + "</article>", 0 !== parcelData["parcel-data"].resb_calcvalue ? (d += '<article class="info-items"><span>BASEMENT AREA</span> ' + parcelData["parcel-data"].resb_basementarea + "</article>", d += '<article class="info-items"><span>BUILDING CLASS</span> ' + parcelData["parcel-data"].resb_bldgclass + "</article>", d += '<article class="info-items"><span>CALCULATED VALUE</span> $' + parseInt(parcelData["parcel-data"].resb_calcvalue).toLocaleString() + "</article>", d += '<article class="info-items"><span>EXTERIOR</span> ' + parcelData["parcel-data"].resb_exterior + "</article>", d += '<article class="info-items"><span>NUMBER OF FIREPLACES</span> ' + parcelData["parcel-data"].resb_fireplaces + "</article>", d += '<article class="info-items"><span>FLOOR AREA</span> ' + parcelData["parcel-data"].resb_floorarea.toLocaleString() + "</article>", d += '<article class="info-items"><span>GARAGE AREA</span> ' + parcelData["parcel-data"].resb_garagearea.toLocaleString() + "</article>", d += '<article class="info-items"><span>GARAGE TYPE</span> ' + parcelData["parcel-data"].resb_gartype + "</article>", d += '<article class="info-items"><span>GROUND AREA</span> ' + parcelData["parcel-data"].resb_groundarea.toLocaleString() + "</article>", d += '<article class="info-items"><span>HALF BATHS</span> ' + parcelData["parcel-data"].resb_halfbaths + "</article>", d += '<article class="info-items"><span>NUMBER OF BEDROOMS</span> ' + parcelData["parcel-data"].resb_nbed + "</article>", d += '<article class="info-items"><span>YEAR BUILD</span> ' + parcelData["parcel-data"].resb_yearbuilt + "</article>") : (d += '<article class="info-items"><span>BUILDING CLASS</span> ' + parcelData["parcel-data"].cib_bldgclass + "</article>", d += '<article class="info-items"><span>CALCULATED VALUE</span> $' + parseInt(parcelData["parcel-data"].cib_calcvalue).toLocaleString() + "</article>", d += '<article class="info-items"><span>FLOOR AREA</span> ' + parcelData["parcel-data"].cib_floorarea.toLocaleString() + "</article>", d += '<article class="info-items"><span>COMMERCIAL OCCUPANT</span> ' + parcelData["parcel-data"].cib_occ + "</article>", d += '<article class="info-items"><span>COMMERCIAL FLOOR PRICE</span> $' + parcelData["parcel-data"].cib_pricefloor.toLocaleString() + "</article>", d += '<article class="info-items"><span>NUMBER OF STORIES</span> ' + parcelData["parcel-data"].cib_stories + "</article>", d += '<article class="info-items"><span>YEAR BUILD</span> ' + parcelData["parcel-data"].cib_yearbuilt + "</article>"), document.querySelector(".parcel-info.display-section").innerHTML = d;}
},
    startGeocoderResults = function (b) {
  document.querySelector(".overall-number").innerHTML = "", document.querySelector(".parcel-info").innerHTML = "", document.querySelector(".info-container > .not-rental").innerHTML = "", document.querySelector(".info-container > .rental").innerHTML = "", document.querySelector(".info-container > .total-rentals").innerHTML = "", document.querySelector(".parcel-data.owner").innerHTML = "", document.querySelector(".parcel-data.building").innerHTML = "", document.querySelector(".parcel-info.display-section").innerHTML = "", map.flyTo({ center: [b.result.geometry.coordinates[0], b.result.geometry.coordinates[1]], zoom: 16, bearing: 0, speed: 2, curve: 1, easing: function (a) {
      return a;
    } });for (var c = document.querySelectorAll(".mapboxgl-ctrl-geocoder.mapboxgl-ctrl > input"), d = "", e = 0; e < c.length; e++) if ("" !== c[e].value.split(",")[0]) {
    d = c[e].value.split(",")[0], d = d.split(" ");break;
  }var f = "",
      g = d.length;d.forEach(function (a, b) {
    f += a, b < g && b + 1 !== g && (f += "+");
  }), $.getJSON("https://gis.detroitmi.gov/arcgis/rest/services/DoIT/CompositeGeocoder/GeocodeServer/findAddressCandidates?Street=&City=&ZIP=&SingleLine=" + f + "&category=&outFields=User_fld&maxLocations=&outSR=&searchExtent=&location=&distance=&magicKey=&f=pjson", function (a) {
    map.setFilter("parcel-fill-hover", ["==", "parcelno", a.candidates[0].attributes.User_fld]), $.getJSON("https://services2.arcgis.com/qvkbeam7Wirps6zC/ArcGIS/rest/services/Rental_Inspections/FeatureServer/0/query?where=" + encodeURI("ParcelNo='" + a.candidates[0].attributes.User_fld + "'") + "&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=ACTION_DESCRIPTION%2C+ParcelNo%2C+CSA_CREATION_DATE&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&quantizationParameters=&sqlFormat=none&f=pjson&token=", function (b) {
      console.log(b);var c = "";if (b.features.length) {
        switch (c += '<article class="info-items"><span>RENTAL STATUS</span> ', b.features[0].attributes.ACTION_DESCRIPTION) {case "Issue Initial Registration ":case "Issue Renewal Registration":
            c += "<initial><strong>In process since</strong></initial><br>" + moment.tz(b.features[0].attributes.CSA_CREATION_DATE, "America/Detroit").format("MMM Do,YYYY") + "</article>";break;default:
            moment.tz(b.features[0].attributes.CSA_CREATION_DATE, "America/Detroit").isBefore(moment()) ? c += "<cofc><strong>Ready for Rental</strong></cofc></article>" : c += "<expired><strong>Expired</strong></expired></article>";}document.querySelector(".parcel-info.rental-info").innerHTML = c, document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT A RENTER\'S COMPLAINT</article></a>', document.querySelector(".info-container > .not-rental").innerHTML = "", parcelData["rental-status"] = b.features[0].attributes.ACTION_DESCRIPTION;
      } else document.querySelector(".parcel-info.rental-info").innerHTML = '<article class="info-items"><span>RENTAL STATUS</span> Not a Rental</article>', document.querySelector(".info-container > .not-rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=7b3746bd20a048a5919ae07bd9ed89de" target="_blank"><article class="form-btn">REGISTER MY RENTAL</article></a>', parcelData["rental-status"] = "Not a Rental";$.getJSON("https://apis.detroitmi.gov/assessments/parcel/" + a.candidates[0].attributes.User_fld.replace(/\./g, "_") + "/", function (a) {
        document.querySelector(".info-container > .street-name").innerHTML = a.propstreetcombined, document.querySelector(".parcel-data.owner").innerHTML = '<div class="data-view-btn" data-view="owner" onclick="switchParcelDataViews(this)">OWNER INFORMATION <span>&#10095;</span></div>', document.querySelector(".parcel-data.building").innerHTML = '<div class="data-view-btn" data-view="building" onclick="switchParcelDataViews(this)">PROPERTY INFORMATION <span>&#10095;</span></div>', parcelData["parcel-data"] = a;
      });
    });for (var b = document.querySelectorAll('.mapboxgl-ctrl-geocoder input[type="text"]'), c = 0; c < b.length; c++) b[c].value = "";
  }), "active" === document.querySelector("#info").className || (document.querySelector("#info").className = "active");
},
    toggleBaseMap = function (b) {
  "" !== b.target.className ? "map-view" === b.target.className ? map.setStyle("mapbox://styles/slusarskiddetroitmi/" + baseMapStyles[0]) : map.setStyle("mapbox://styles/slusarskiddetroitmi/" + baseMapStyles[1]) : "map-view" === b.target.parentElement.className ? map.setStyle("mapbox://styles/slusarskiddetroitmi/" + baseMapStyles[0]) : map.setStyle("mapbox://styles/slusarskiddetroitmi/" + baseMapStyles[1]);
},
    closeInfo = function () {
  "CITY OF DETROIT" === document.querySelector(".info-container > .street-name").innerHTML ? document.querySelector("#info").className = "" : loadCityNumbers(), document.querySelector('.mapboxgl-ctrl-geocoder > input[type="text"]').value = "", map.flyTo({ center: [-83.15, 42.36], zoom: 11.5, bearing: 0, speed: 2, curve: 1, easing: function (a) {
      return a;
    } });
},
    addDataLayers = function () {
  map.addSource("parcels", { type: "vector", url: "mapbox://slusarskiddetroitmi.cwobdjn0" }), map.addSource("councils", { type: "geojson", data: "https://gis.detroitmi.gov/arcgis/rest/services/NeighborhoodsApp/council_district/MapServer/1/query?where=1%3D1&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=4326&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&f=geojson" }), map.addSource("councils_labels", { type: "geojson", data: "https://gis.detroitmi.gov/arcgis/rest/services/NeighborhoodsApp/council_district/MapServer/1/query?where=1%3D1&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=4326&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&f=geojson" }), map.addSource("neighborhoods", { type: "geojson", data: "https://gis.detroitmi.gov/arcgis/rest/services/NeighborhoodsApp/Neighborhoods/MapServer/1/query?where=1%3D1&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=2898&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=4326&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&f=geojson" }), map.addSource("neighborhoods-labels", { type: "geojson", data: "https://gis.detroitmi.gov/arcgis/rest/services/NeighborhoodsApp/Neighborhoods/MapServer/0/query?where=1%3D1&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=2898&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=4326&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&f=geojson" }), map.addLayer({ id: "councils_labels", type: "symbol", source: "councils_labels", maxzoom: 12, layout: { "text-font": ["Mark SC Offc Pro Bold"], "text-field": "{name}", "symbol-placement": "point", "text-size": 22 }, paint: { "text-color": "black" } }), map.addLayer({ id: "council-borders", type: "line", source: "councils", maxzoom: 12, layout: {}, paint: { "line-color": "#004b90", "line-width": 3 } }), map.addLayer({ id: "council-fill", type: "fill", source: "councils", maxzoom: 12, layout: {}, paint: { "fill-color": "#0065c3", "fill-opacity": 0 } }), map.addLayer({ id: "council-fill-hover", type: "fill", source: "councils", maxzoom: 12, layout: {}, paint: { "fill-color": "#0065c3", "fill-opacity": .5 }, filter: ["==", "name", ""] }), map.addLayer({ id: "neighborhoods-borders", type: "line", source: "neighborhoods", minzoom: 12, maxzoom: 15.5, layout: {}, paint: { "line-color": "#004b90", "line-width": 3 } }), map.addLayer({ id: "neighborhoods-fill", type: "fill", source: "neighborhoods", minzoom: 12, maxzoom: 15.5, paint: { "fill-color": "#fff", "fill-opacity": 0 } }), map.addLayer({ id: "neighborhoods-labels", type: "symbol", source: "neighborhoods-labels", minzoom: 12, maxzoom: 15.5, layout: { "text-font": ["Mark SC Offc Pro Bold"], "text-field": "{name}" }, paint: { "text-color": "black" } }), map.addLayer({ id: "parcel-fill", type: "fill", source: "parcels", minzoom: 15.5, layout: {}, paint: { "fill-color": "#fff", "fill-opacity": 0 }, "source-layer": "parcelsgeojson" }), map.addLayer({ id: "parcel-line", type: "line", source: "parcels", minzoom: 15.5, layout: {}, paint: { "line-color": "#cbcbcb" }, "source-layer": "parcelsgeojson" }), map.addLayer({ id: "parcel-fill-hover", type: "line", source: "parcels", minzoom: 15.5, layout: {}, paint: { "line-color": "#a40040" }, "source-layer": "parcelsgeojson", filter: ["==", "parcelno", ""] }), $.getJSON("https://services2.arcgis.com/qvkbeam7Wirps6zC/ArcGIS/rest/services/Rental_Inspections/FeatureServer/0/query?where=ACTION_DESCRIPTION%3D%27Issue+City+C+of+C+-++Ord+18-03%27+AND+ParcelNo+IS+NOT+NULL&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=ParcelNo%2C+CSA_CREATION_DATE&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&quantizationParameters=&sqlFormat=none&f=pjson&token=", function (a) {
    for (var b = ["in", "parcelno"], c = 0; c < a.features.length; c++) moment.tz(a.features[c].attributes.CSA_CREATION_DATE, "America/Detroit").isBefore(moment()) && b.push(a.features[c].attributes.ParcelNo);map.addLayer({ id: "parcel-fill-cofc", type: "fill", source: "parcels", "source-layer": "parcelsgeojson", filter: b, paint: { "fill-color": "#068A24", "fill-opacity": .5 } });
  });
};map.on("style.load", function () {
  addDataLayers(), map.resize();
}), map.on("load", function (a) {
  loadCityNumbers(), map.on("mousemove", function (a) {
    var b = map.queryRenderedFeatures(a.point, { layers: ["council-fill"] });b.length ? map.setFilter("council-fill-hover", ["==", "districts", b[0].properties.districts]) : (map.setFilter("council-fill-hover", ["==", "districts", ""]), b = map.queryRenderedFeatures(a.point, { layers: ["neighborhoods-fill"] }), b.length || (b = map.queryRenderedFeatures(a.point, { layers: ["parcel-fill"] }))), map.getCanvas().style.cursor = b.length ? "pointer" : "";
  });var b = new MapboxGeocoder({ accessToken: mapboxgl.accessToken, bbox: [-83.3437, 42.2102, -82.8754, 42.5197] });map.addControl(b, "top-left");var c = new MapboxGeocoder({ accessToken: mapboxgl.accessToken, bbox: [-83.3437, 42.2102, -82.8754, 42.5197] });document.getElementById("geocoder").appendChild(c.onAdd(map));for (var d = document.querySelectorAll('.mapboxgl-ctrl-geocoder input[type="text"]'), e = 0; e < d.length; e++) d[e].placeholder = "Lookup an address";b.on("result", function (a) {
    startGeocoderResults(a);
  }), c.on("result", function (a) {
    startGeocoderResults(a);
  });
}), map.on("zoom", function () {}), document.getElementById("close-emergency-modal-btn").addEventListener("click", closeInfo);for (var toggleBaseMapBtns = document.querySelectorAll("#basemap-toggle > article"), i = 0; i < toggleBaseMapBtns.length; i++) toggleBaseMapBtns[i].addEventListener("click", function (a) {
  toggleBaseMap(a);
});var mapSectionClickModule = function (a) {
  map.on("click", function (a) {
    var b = null,
        c = null,
        d = null;try {
      b = map.queryRenderedFeatures(a.point, { layers: ["council-fill"] }), c = map.queryRenderedFeatures(a.point, { layers: ["neighborhoods-fill"] }), d = map.queryRenderedFeatures(a.point, { layers: ["parcel-fill"] });
    } catch (a) {}switch (!0) {case 0 !== b.length:
        var e = map.queryRenderedFeatures(a.point, { layers: ["council-fill"] }),
            f = e[0],
            g = turf.simplify(f, .003, !1);Terraformer.ArcGIS.convert(g.geometry);document.querySelector(".overall-number").innerHTML = "", document.querySelector(".parcel-info").innerHTML = "", document.querySelector(".info-container > .not-rental").innerHTML = "", document.querySelector(".info-container > .rental").innerHTML = "", document.querySelector(".info-container > .total-rentals").innerHTML = "", document.querySelector(".parcel-data.owner").innerHTML = "", document.querySelector(".parcel-data.building").innerHTML = "", document.querySelector(".parcel-info.display-section").innerHTML = "", document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT RENTAL COMPLAINT</article></a>', document.querySelector(".info-container > .street-name").innerHTML = g.properties.name, "active" === document.querySelector("#info").className || (document.querySelector("#info").className = "active"), map.flyTo({ center: [a.lngLat.lng, a.lngLat.lat], zoom: 13, bearing: 0, speed: 2, curve: 1, easing: function (a) {
            return a;
          } });break;case 0 !== c.length:
        map.flyTo({ center: [a.lngLat.lng, a.lngLat.lat], zoom: 16, bearing: 0, speed: 2, curve: 1, easing: function (a) {
            return a;
          } }), document.querySelector(".overall-number").innerHTML = "", document.querySelector(".parcel-info").innerHTML = "", document.querySelector(".info-container > .not-rental").innerHTML = "", document.querySelector(".info-container > .rental").innerHTML = "", document.querySelector(".info-container > .total-rentals").innerHTML = "", document.querySelector(".parcel-data.owner").innerHTML = "", document.querySelector(".parcel-data.building").innerHTML = "", document.querySelector(".parcel-info.display-section").innerHTML = "", $.getJSON("https://gis.detroitmi.gov/arcgis/rest/services/NeighborhoodsApp/Neighborhoods/MapServer/1/query?where=&text=&objectIds=&time=&geometry=" + a.lngLat.lng + "%2C" + a.lngLat.lat + "&geometryType=esriGeometryPoint&inSR=4326&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=4326&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&f=geojson", function (a) {
          var b = turf.simplify(a.features[0], 5e-4, !1);document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT RENTAL COMPLAINT</article></a>', document.querySelector(".info-container > .street-name").innerHTML = b.properties.name, "active" === document.querySelector("#info").className || (document.querySelector("#info").className = "active");Terraformer.ArcGIS.convert(b.geometry);
        });break;case 0 !== d.length:
        document.querySelector(".overall-number").innerHTML = "", document.querySelector(".parcel-info").innerHTML = "", document.querySelector(".info-container > .street-name").innerHTML = "", document.querySelector(".info-container > .total-rentals").innerHTML = "", document.querySelector(".parcel-data.owner").innerHTML = "", document.querySelector(".parcel-data.building").innerHTML = "", document.querySelector(".parcel-info.display-section").innerHTML = "", map.setFilter("parcel-fill-hover", ["==", "parcelno", d[0].properties.parcelno]), $.getJSON("https://services2.arcgis.com/qvkbeam7Wirps6zC/ArcGIS/rest/services/Rental_Inspections/FeatureServer/0/query?where=" + encodeURI("ParcelNo='" + d[0].properties.parcelno + "'") + "&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=ACTION_DESCRIPTION%2C+ParcelNo%2C+CSA_CREATION_DATE&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&quantizationParameters=&sqlFormat=none&f=json&token=", function (a) {
          var b = "";if (a.features.length) {
            if (a.features[0].properties) switch (b += '<article class="info-items"><span>RENTAL STATUS</span> ', a.features[0].properties.ACTION_DESCRIPTION) {case "Issue Initial Registration":case "Issue Renewal Registration":
                b += "<initial><strong>In process since</strong></initial><br>" + moment.tz(a.features[0].properties.CSA_CREATION_DATE, "America/Detroit").format("MMM Do,YYYY") + "</article>";break;default:
                moment.tz(a.features[0].attributes.CSA_CREATION_DATE, "America/Detroit").isBefore(moment()) ? b += "<cofc><strong>Ready for Rental</strong></cofc></article>" : b += "<expired><strong>Expired Rental</strong></expired></article>";} else switch (b += '<article class="info-items"><span>RENTAL STATUS</span> ', a.features[0].attributes.ACTION_DESCRIPTION) {case "Issue Initial Registration ":case "Issue Renewal Registration":
                b += "<initial><strong>In process since</strong></initial><br>" + moment.tz(a.features[0].attributes.CSA_CREATION_DATE, "America/Detroit").format("MMM Do,YYYY") + "</article>";break;default:
                moment.tz(a.features[0].attributes.CSA_CREATION_DATE, "America/Detroit").isBefore(moment()) ? b += "<cofc><strong>Ready for Rental</strong></cofc></article>" : b += "<expired><strong>Expired</strong></expired></article>";}document.querySelector(".parcel-info.rental-info").innerHTML = b, document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT RENTAL COMPLAINT</article></a>', document.querySelector(".info-container > .not-rental").innerHTML = "";
          } else b += '<article class="info-items"><span>RENTAL STATUS</span> Not a Rental</article>', document.querySelector(".parcel-info.rental-info").innerHTML = b, document.querySelector(".info-container > .not-rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=7b3746bd20a048a5919ae07bd9ed89de" target="_blank"><article class="form-btn">REGISTER MY RENTAL</article></a>', document.querySelector(".info-container > .rental").innerHTML = '<a href="https://app.smartsheet.com/b/form?EQBCT=efa41296fdc646dcadc3cbca2d6fd6ac" target="_blank"><article class="form-btn">SUBMIT RENTAL COMPLAINT</article></a>';
        }), $.getJSON("https://apis.detroitmi.gov/assessments/parcel/" + d[0].properties.parcelno.replace(/\./g, "_") + "/", function (a) {
          document.querySelector(".info-container > .street-name").innerHTML = a.propstreetcombined, document.querySelector(".parcel-data.owner").innerHTML = '<div class="data-view-btn" data-view="owner" onclick="switchParcelDataViews(this)">OWNER INFORMATION <span>&#10095;</span></div>', document.querySelector(".parcel-data.building").innerHTML = '<div class="data-view-btn" data-view="building" onclick="switchParcelDataViews(this)">PROPERTY INFORMATION <span>&#10095;</span></div>', parcelData["parcel-data"] = a;
        }), "active" === document.querySelector("#info").className || (document.querySelector("#info").className = "active");}
  });
}(window);
